[
    {
        "path": "packages/core/tests/interface/basic/index.ts",
        "imports": [],
        "declarations": [
            {
                "name": "Foo",
                "kind": "interface",
                "typeParameters": [
                    {
                        "name": "K"
                    }
                ],
                "members": [
                    {
                        "name": "x",
                        "kind": "field",
                        "type": {
                            "text": "number"
                        }
                    },
                    {
                        "name": "y",
                        "kind": "field",
                        "type": {
                            "text": "string | K | undefined"
                        },
                        "optional": true
                    },
                    {
                        "name": "bar",
                        "return": {
                            "type": {
                                "text": "void"
                            }
                        },
                        "kind": "method"
                    },
                    {
                        "name": "isBar",
                        "return": {
                            "type": {
                                "text": "boolean"
                            }
                        },
                        "parameters": [
                            {
                                "name": "a",
                                "type": {
                                    "text": "number"
                                }
                            },
                            {
                                "name": "b",
                                "type": {
                                    "text": "string"
                                }
                            }
                        ],
                        "kind": "method"
                    },
                    {
                        "name": "checkBar",
                        "return": {
                            "type": {
                                "text": "Promise<void>"
                            }
                        },
                        "kind": "method"
                    },
                    {
                        "name": "barWithTypedParameter",
                        "return": {
                            "type": {
                                "text": "T"
                            }
                        },
                        "parameters": [
                            {
                                "name": "c",
                                "type": {
                                    "text": "T"
                                }
                            }
                        ],
                        "typeParameters": [
                            {
                                "name": "T"
                            }
                        ],
                        "kind": "method"
                    },
                    {
                        "name": "arrowFuncWithTypedParameters",
                        "return": {
                            "type": {
                                "text": "T"
                            }
                        },
                        "parameters": [
                            {
                                "name": "c",
                                "type": {
                                    "text": "T"
                                }
                            }
                        ],
                        "typeParameters": [
                            {
                                "name": "T"
                            }
                        ],
                        "kind": "method"
                    }
                ]
            }
        ],
        "exports": [
            {
                "name": "Foo",
                "type": "named"
            }
        ]
    }
]
