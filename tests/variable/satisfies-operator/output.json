[
    {
        "sourcePath": "tests/variable/satisfies-operator/index.ts",
        "outputPath": "tests/variable/satisfies-operator/index.js",
        "imports": [],
        "declarations": [
            {
                "name": "Colors",
                "kind": "TypeAlias",
                "line": 1,
                "value": {
                    "text": "'red' | 'green' | 'blue'",
                    "kind": "Union",
                    "elements": [
                        {
                            "text": "\"red\"",
                            "kind": "Literal"
                        },
                        {
                            "text": "\"green\"",
                            "kind": "Literal"
                        },
                        {
                            "text": "\"blue\"",
                            "kind": "Literal"
                        }
                    ]
                }
            },
            {
                "name": "RGB",
                "kind": "TypeAlias",
                "line": 3,
                "value": {
                    "text": "[red: number, green: number, blue: number]",
                    "kind": "Tuple",
                    "elements": [
                        {
                            "name": "red",
                            "text": "number",
                            "kind": "Primitive"
                        },
                        {
                            "name": "green",
                            "text": "number",
                            "kind": "Primitive"
                        },
                        {
                            "name": "blue",
                            "text": "number",
                            "kind": "Primitive"
                        }
                    ]
                }
            },
            {
                "name": "palette",
                "kind": "Variable",
                "line": 5,
                "type": {
                    "text": "{ red: [number, number, number]; green: string; blue: [number, number, number]; }",
                    "kind": "ObjectLiteral",
                    "properties": [
                        {
                            "name": "red",
                            "kind": "Property",
                            "type": {
                                "text": "[number, number, number]",
                                "kind": "Tuple",
                                "elements": [
                                    {
                                        "text": "number",
                                        "kind": "Primitive"
                                    },
                                    {
                                        "text": "number",
                                        "kind": "Primitive"
                                    },
                                    {
                                        "text": "number",
                                        "kind": "Primitive"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "green",
                            "kind": "Property",
                            "type": {
                                "text": "string",
                                "kind": "Primitive"
                            }
                        },
                        {
                            "name": "blue",
                            "kind": "Property",
                            "type": {
                                "text": "[number, number, number]",
                                "kind": "Tuple",
                                "elements": [
                                    {
                                        "text": "number",
                                        "kind": "Primitive"
                                    },
                                    {
                                        "text": "number",
                                        "kind": "Primitive"
                                    },
                                    {
                                        "text": "number",
                                        "kind": "Primitive"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "default": "{\n    red: [255, 0, 0],\n    green: '#00ff00',\n    blue: [0, 0, 255],\n} satisfies Record<Colors, string | RGB>"
            },
            {
                "name": "redComponent",
                "kind": "Variable",
                "line": 11,
                "type": {
                    "text": "number | undefined",
                    "kind": "Union",
                    "elements": [
                        {
                            "text": "number",
                            "kind": "Primitive"
                        },
                        {
                            "text": "undefined",
                            "kind": "Primitive"
                        }
                    ]
                },
                "default": "palette.red.at(0)"
            },
            {
                "name": "greenNormalized",
                "kind": "Variable",
                "line": 12,
                "type": {
                    "text": "string",
                    "kind": "Primitive"
                },
                "default": "palette.green.toUpperCase()"
            }
        ],
        "exports": [
            {
                "name": "Colors",
                "kind": "Named"
            },
            {
                "name": "RGB",
                "kind": "Named"
            },
            {
                "name": "palette",
                "kind": "Named"
            },
            {
                "name": "redComponent",
                "kind": "Named"
            },
            {
                "name": "greenNormalized",
                "kind": "Named"
            }
        ]
    }
]