[
    {
        "sourcePath": "tests/variable/complex-types/index.ts",
        "outputPath": "tests/variable/complex-types/index.js",
        "imports": [],
        "declarations": [
            {
                "name": "TypeX",
                "kind": "TypeAlias",
                "line": 8,
                "value": {
                    "text": "{ x: number; y?: number }",
                    "kind": "ObjectLiteral",
                    "properties": [
                        {
                            "name": "x",
                            "kind": "Property",
                            "type": {
                                "text": "number",
                                "kind": "Primitive"
                            },
                            "line": 8
                        },
                        {
                            "name": "y",
                            "kind": "Property",
                            "type": {
                                "text": "number",
                                "kind": "Primitive"
                            },
                            "line": 8,
                            "optional": true
                        }
                    ]
                }
            },
            {
                "name": "TypeY",
                "kind": "TypeAlias",
                "line": 9,
                "value": {
                    "text": "{ z?: boolean }",
                    "kind": "ObjectLiteral",
                    "properties": [
                        {
                            "name": "z",
                            "kind": "Property",
                            "type": {
                                "text": "boolean",
                                "kind": "Primitive"
                            },
                            "line": 9,
                            "optional": true
                        }
                    ]
                }
            },
            {
                "name": "TypeArray",
                "kind": "TypeAlias",
                "line": 10,
                "value": {
                    "text": "TypeX[]",
                    "kind": "Array",
                    "elementType": {
                        "text": "TypeX",
                        "kind": "Reference",
                        "source": {
                            "line": 8,
                            "path": "tests/variable/complex-types/index.ts"
                        }
                    }
                }
            },
            {
                "name": "foo",
                "kind": "Variable",
                "line": 12,
                "type": {
                    "text": "Colors",
                    "kind": "Reference",
                    "source": {
                        "line": 1,
                        "path": "tests/variable/complex-types/index.ts"
                    }
                },
                "default": "Colors.Red"
            },
            {
                "name": "blue",
                "kind": "Variable",
                "line": 13,
                "type": {
                    "text": "Colors",
                    "kind": "Reference",
                    "source": {
                        "line": 1,
                        "path": "tests/variable/complex-types/index.ts"
                    }
                },
                "default": "Colors.Blue"
            },
            {
                "name": "bar",
                "kind": "Variable",
                "line": 14,
                "type": {
                    "text": "TypeX",
                    "kind": "Reference",
                    "source": {
                        "line": 8,
                        "path": "tests/variable/complex-types/index.ts"
                    }
                },
                "default": "{ x: 4, y: 4 }"
            },
            {
                "name": "bar2",
                "kind": "Variable",
                "line": 15,
                "type": {
                    "text": "TypeX & TypeY",
                    "kind": "Intersection",
                    "elements": [
                        {
                            "text": "TypeX",
                            "kind": "Reference",
                            "source": {
                                "line": 8,
                                "path": "tests/variable/complex-types/index.ts"
                            }
                        },
                        {
                            "text": "TypeY",
                            "kind": "Reference",
                            "source": {
                                "line": 9,
                                "path": "tests/variable/complex-types/index.ts"
                            }
                        }
                    ]
                },
                "default": "{ x: 3 }"
            },
            {
                "name": "foo2",
                "kind": "Variable",
                "line": 16,
                "type": {
                    "text": "TypeX[]",
                    "kind": "Array",
                    "elementType": {
                        "text": "TypeX",
                        "kind": "Reference",
                        "source": {
                            "line": 8,
                            "path": "tests/variable/complex-types/index.ts"
                        }
                    }
                },
                "default": "[]"
            },
            {
                "name": "foo3",
                "kind": "Variable",
                "line": 17,
                "type": {
                    "text": "TypeArray",
                    "kind": "Reference",
                    "source": {
                        "line": 10,
                        "path": "tests/variable/complex-types/index.ts"
                    }
                },
                "default": "[]"
            }
        ],
        "exports": [
            {
                "name": "TypeX",
                "kind": "Named"
            },
            {
                "name": "TypeY",
                "kind": "Named"
            },
            {
                "name": "TypeArray",
                "kind": "Named"
            },
            {
                "name": "foo",
                "kind": "Named"
            },
            {
                "name": "blue",
                "kind": "Named"
            },
            {
                "name": "bar",
                "kind": "Named"
            },
            {
                "name": "bar2",
                "kind": "Named"
            },
            {
                "name": "foo2",
                "kind": "Named"
            },
            {
                "name": "foo3",
                "kind": "Named"
            }
        ]
    }
]