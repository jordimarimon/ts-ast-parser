---
title: Getting Started
order: 2
layout: base
withHeader: true
withSideBar: true
tags: module
module: getting-started
---

{% from "macros/heading.njk" import heading %}

{{ heading(title) }}

<section class="mb-10">
    <h2 class="heading-3 mb-4">
        Installation
    </h2>

    <p class="text-md mb-4">
        npm:
    </p>

{% highlight "bash" %}
npm i -D @ts-ast-parser/core
{% endhighlight %}

    <p class="text-md my-4">
        yarn:
    </p>

{% highlight "bash" %}
yarn add -D @ts-ast-parser/core
{% endhighlight %}

    <p class="text-md my-4">
        pnpm:
    </p>

{% highlight "bash" %}
pnpm add -D @ts-ast-parser/core
{% endhighlight %}
</section>

<section class="mb-10">
    <h2 class="heading-3 mb-4">
        How to use it
    </h2>

    <p class="text-md mb-4">
        You can provide the array of files that you would like to obtain information of:
    </p>

{% highlight "ts" %}
import { parseFromFiles } from '@ts-ast-parser/core';

const reflectedModules = parseFromFiles(['test1.ts', 'test2.ts']);
{% endhighlight %}

    <p class="text-md mb-4">
        Or you can provide a glob or an array of globs instead:
    </p>

{% highlight "ts" %}
import { parseFromGlob } from '@ts-ast-parser/core';

const reflectedModules = parseFromGlob('**/*.ts');
{% endhighlight %}

    <p class="text-md mb-4">
        Finally, there is also support for getting information from a code snippet:
    </p>

{% highlight "ts" %}
import { parseFromSource } from '@ts-ast-parser/core';

const reflectedModules = parseFromSource('const foo = true;export { foo };');
{% endhighlight %}

    <p class="text mt-4">
        See the <a class="prose" href="{{ '/api-reference/' | url }}">API Reference</a> for more information around the parser functions.
    </p>
</section>


